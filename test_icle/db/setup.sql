PRAGMA foreign_keys = ON;
CREATE TABLE IF NOT EXISTS Subject (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    subjectName TEXT NOT NULL UNIQUE
);
CREATE TABLE IF NOT EXISTS Topics (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    topicName TEXT NOT NULL UNIQUE NOT NULL,
    subjectID INTEGER REFERENCES Subject(ID) ON DELETE CASCADE NOT NULL
);
CREATE TABLE IF NOT EXISTS TextQuestions (
    questionID INTEGER PRIMARY KEY AUTOINCREMENT,
    points INTEGER NOT NULL,
    title TEXT NOT NULL,
    question TEXT NOT NULL,
    exAns TEXT,
    topicID INTEGER NOT NULL REFERENCES Topics(ID) ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS MultipleChoice (
    questionID INTEGER PRIMARY KEY AUTOINCREMENT,
    points INTEGER NOT NULL,
    title TEXT NOT NULL,
    question TEXT NOT NULL,
    topicID INTEGER NOT NULL REFERENCES Topics(ID) ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS MultipleChoiceAnswers (
    answerID INTEGER NOT NULL REFERENCES MultipleChoice(questionID) ON DELETE CASCADE,
    name TEXT NOT NULL,
    correct TINYINTEGER NOT NULL,
    PRIMARY KEY (answerID, name)
);
CREATE TABLE IF NOT EXISTS Tests (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    title TEXT NOT NULL,
    date DATETIME NOT NULL,
    logo BLOB
);
CREATE TABLE IF NOT EXISTS GradingSheets(
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL
);
CREATE TABLE IF NOT EXISTS GradingEntry(
    gradingSheetID INTEGER NOT NULL REFERENCES GradingSheets(ID) ON DELETE CASCADE,
    percentage INTEGER NOT NULL,
    grade TEXT NOT NULL,
    PRIMARY KEY (gradingSheetID, percentage)
);
)
CREATE TABLE IF NOT EXISTS TestMultipleChoice (
    testID INTEGER NOT NULL REFERENCES Tests(ID) ON DELETE CASCADE,
    multipleChoiceID INTEGER NOT NULL REFERENCES MultipleChoice(questionID) ON DELETE CASCADE,
    PRIMARY KEY (testID, multipleChoiceID)
);
CREATE TABLE IF NOT EXISTS TestTextQuestions (
    testID INTEGER NOT NULL REFERENCES Tests(ID) ON DELETE CASCADE,
    textQuestionID INTEGER NOT NULL REFERENCES TextQuestions(questionID) ON DELETE CASCADE,
    PRIMARY KEY (testID, textQuestionID)
);
CREATE TABLE IF NOT EXISTS TestTopics (
    testID INTEGER NOT NULL REFERENCES Tests(ID) ON DELETE CASCADE,
    topicID INTEGER NOT NULL REFERENCES Topics(ID) ON DELETE CASCADE,
    PRIMARY KEY (testID, topicID)
);

CREATE INDEX IF NOT EXISTS test_id ON Tests(ID);
CREATE INDEX IF NOT EXISTS text_question_testID ON TestTextQuestions(testID);
CREATE INDEX IF NOT EXISTS multiple_choice_testID ON TestMultipleChoice(testID);
CREATE INDEX IF NOT EXISTS multiple_choice_answerID ON MultipleChoiceAnswers(answerID);